/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import ConexionBD.ConexionUsuarios;
import Datos.Usuario;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class RegistroUsuarios extends javax.swing.JFrame {

    /**
     * Creates new form RegistroUsuarios
     */
    public RegistroUsuarios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        txtApellidoUsuario = new javax.swing.JTextField();
        txtDocumentoUsuario = new javax.swing.JTextField();
        txtCorreoUsuario = new javax.swing.JTextField();
        txtTelefonoUsuario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtContraseñaUsuario = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        botonGuardar = new javax.swing.JButton();
        btonCancelar = new javax.swing.JButton();
        botonAtras = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Datos de Usuario", 0, 0, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Apellidos:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Documento:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Telefono:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Correo:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Contraseña:");

        txtContraseñaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraseñaUsuarioActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("saldo:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .addComponent(txtApellidoUsuario)
                    .addComponent(txtDocumentoUsuario)
                    .addComponent(txtTelefonoUsuario)
                    .addComponent(txtCorreoUsuario)
                    .addComponent(txtContraseñaUsuario)
                    .addComponent(txtSaldo))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtApellidoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocumentoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTelefonoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtContraseñaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(196, 59, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setText("FORMULARIO PARA REGISTRAR USUARIOS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 19, -1, -1));

        botonGuardar.setBackground(new java.awt.Color(0, 0, 204));
        botonGuardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonGuardar.setForeground(new java.awt.Color(255, 255, 255));
        botonGuardar.setText("Guardar");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(botonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 440, -1, -1));

        btonCancelar.setBackground(new java.awt.Color(0, 0, 204));
        btonCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btonCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btonCancelar.setText("Cancelar");
        btonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btonCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, -1, -1));

        botonAtras.setBackground(new java.awt.Color(0, 0, 204));
        botonAtras.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonAtras.setForeground(new java.awt.Color(255, 255, 255));
        botonAtras.setText("Atras");
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });
        jPanel1.add(botonAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Herramientas2.jpg"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtContraseñaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraseñaUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraseñaUsuarioActionPerformed
  
     // Método para validar un correo electrónico utilizando expresiones regulares
    private boolean ValidarEmail(String email) {
        String emailX = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailX);
    }
    
    // metodo para saber si existen datos duplicados en la base de datos
    private ArrayList<String> existenDatosDuplicados(String documento, String telefono, String correo) throws SQLException, ClassNotFoundException {
        Connection conexion = null;
        PreparedStatement consultaVerificacion = null;

        Class.forName("com.mysql.jdbc.Driver");
        conexion = ConexionUsuarios.getConnection();

        // Modificamos la consulta para seleccionar los campos
        String consultaVerificarDuplicados = "SELECT num_cedula, num_telefono, correo FROM usuarios WHERE num_cedula = ? OR num_telefono = ? OR correo = ?";
        consultaVerificacion = conexion.prepareStatement(consultaVerificarDuplicados);

        consultaVerificacion.setString(1, documento);
        consultaVerificacion.setString(2, telefono);
        consultaVerificacion.setString(3, correo);

        // Creamos una lista para guardar los datos duplicados
        ArrayList<String> duplicados = new ArrayList<>();
        try (ResultSet rs = consultaVerificacion.executeQuery()) {
            while (rs.next()) {
                String documentoUsuario = rs.getString("num_cedula");
                String telefonoUsuario = rs.getString("num_telefono");
                String correoUsuario = rs.getString("correo");

                if (documentoUsuario != null && documentoUsuario.equals(documento)) {
                    duplicados.add("num_cedula: " + documentoUsuario);
                }
                if (telefonoUsuario != null && telefonoUsuario.equals(telefono)) {
                    duplicados.add("num_telefono: " + telefonoUsuario);
                }
                if (correoUsuario != null && correoUsuario.equals(correo)) {
                    duplicados.add("Correo: " + correoUsuario);
                }
            }
        }
        return duplicados;
    }
    
    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        // Obtengo los valores de los campos de texto
        String nombres = txtNombreUsuario.getText();
        String apellidos = txtApellidoUsuario.getText();
        String documento = txtDocumentoUsuario.getText();
        String telefono = txtTelefonoUsuario.getText();
        String correo = txtCorreoUsuario.getText().toLowerCase();
        char[] contraseña = txtContraseñaUsuario.getPassword();
        String clave = String.copyValueOf(contraseña);
        String Dinero = txtSaldo.getText();
        double saldo = Double.parseDouble(Dinero);

        // Verifico la longitud de los campos y otros criterios
        if (nombres.isEmpty() || !nombres.matches("[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ ]+") || nombres.length() > 255) {
            JOptionPane.showMessageDialog(null, "El nombre no puede estar vacío, debe llevar solo letras y no superar los 255 caracteres.");
        } else if (apellidos.isEmpty() || !apellidos.matches("[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ ]+") || apellidos.length() > 255) {
            JOptionPane.showMessageDialog(null, "El apellido no puede estar vacío, debe llevar solo letras y no superar los 255 caracteres.");
        } else if (documento.isEmpty() || !documento.matches("\\d+") || documento.length() > 20) {
            JOptionPane.showMessageDialog(null, "El número de documento no puede estar vacío, debe ser numérico y no superar los 20 caracteres.");
        } else if (telefono.isEmpty() || !telefono.matches("\\d{7,}") || telefono.length() > 15) {
            JOptionPane.showMessageDialog(null, "El número de teléfono no puede estar vacío, debe ser numérico y tener entre 7 y 15 caracteres.");
        } else if (correo.isEmpty() || !ValidarEmail(correo.toLowerCase())) {
            JOptionPane.showMessageDialog(null, "El correo electrónico no puede estar vacío y debe ser válido.");
        } else if (clave.isEmpty()) {
            JOptionPane.showMessageDialog(null, "La contraseña no puede estar vacía.");
        } else {
            // Creo un objeto Usuario y almaceno la información
            Usuario usuario = new Usuario(nombres, apellidos, documento, correo, clave, telefono, saldo);

            // Verifico si ya existe un usuario con la misma información
            if (Usuario.usuariosBD == null) {
                Usuario.usuariosBD = new ArrayList<>(); // Inicializa la lista si es nula
            }

            try {
                ArrayList<String> duplicados = existenDatosDuplicados(documento, telefono, correo);
                if (!duplicados.isEmpty()) {
                    StringBuilder mensaje = new StringBuilder("Ya existe un usuario registrado con alguno de estos datos: \n");
                    for (String tipo : duplicados) {
                        mensaje.append(tipo).append("\n");
                        if (tipo.contains("documento")) {
                            txtDocumentoUsuario.setText("");
                        }
                        if (tipo.contains("telefono")) {
                            txtTelefonoUsuario.setText("");
                        }
                        if (tipo.contains("correo")) {
                            txtCorreoUsuario.setText("");
                        }
                    }
                    JOptionPane.showMessageDialog(null, mensaje.toString());
                } else {
                    // Almaceno al usuario en la lista
                    Usuario.usuariosBD.add(usuario);

                    try {
                        // Almaceno la información de los usuarios en la base de datos
                        ConexionUsuarios.guardarUsuariosEnBD(Usuario.usuariosBD);
                    } catch (SQLException ex) {
                        Logger.getLogger(RegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(RegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    // Muestro un mensaje con el número de usuarios registrados
                    int cuentaUsuarios = 0;
                    try {
                        cuentaUsuarios = ConexionUsuarios.obtenerNumeroUsuariosDesdeBD();
                        JOptionPane.showMessageDialog(null, "El usuario fue registrado con éxito.\nExisten " + cuentaUsuarios + " Usuarios");
                        // Limpiar campos después del registro
                        txtApellidoUsuario.setText("");
                        txtContraseñaUsuario.setText("");
                        txtCorreoUsuario.setText("");
                        txtDocumentoUsuario.setText("");
                        txtTelefonoUsuario.setText("");
                        txtNombreUsuario.setText("");
                        txtSaldo.setText("");

                    } catch (SQLException ex) {
                        Logger.getLogger(RegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(RegistroUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException | ClassNotFoundException ex) {
                // Manejo de excepciones
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al verificar datos duplicados en la base de datos.");
            }
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void btonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonCancelarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "¿Desea cerrar la ventana?", "OJO - CONFIRMAR",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (opcion == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btonCancelarActionPerformed

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        this.dispose();
                Login inicio = new Login();
                inicio.setLocationRelativeTo(null);
                inicio.setVisible(true);
    }//GEN-LAST:event_botonAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton btonCancelar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtApellidoUsuario;
    private javax.swing.JPasswordField txtContraseñaUsuario;
    private javax.swing.JTextField txtCorreoUsuario;
    private javax.swing.JTextField txtDocumentoUsuario;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtTelefonoUsuario;
    // End of variables declaration//GEN-END:variables
}
