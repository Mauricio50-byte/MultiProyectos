
package Ventanas;

import ConexionBD.ConexionUsuarios;
import Datos.Usuario;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class MiCuenta extends javax.swing.JFrame {

    /**
     * Creates new form MiCuenta
     */
    public MiCuenta() {
        initComponents();
        cargarDatosDesdeBaseDeDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        txtApellidoUsuario = new javax.swing.JTextField();
        txtDocumentoUsuario = new javax.swing.JTextField();
        txtCorreoUsuario = new javax.swing.JTextField();
        txtTelefonoUsuario = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtContraseñaUsuario = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        btonCancelar = new javax.swing.JButton();
        botonBuscar = new javax.swing.JButton();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonAtras = new javax.swing.JButton();
        BotonLimpiarCampos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jPanel2.setBackground(new java.awt.Color(0, 51, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Datos de Usuario", 0, 0, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Apellidos:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Documento:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Telefono:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Correo:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Contraseña");

        txtContraseñaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraseñaUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .addComponent(txtApellidoUsuario)
                    .addComponent(txtDocumentoUsuario)
                    .addComponent(txtTelefonoUsuario)
                    .addComponent(txtCorreoUsuario)
                    .addComponent(txtContraseñaUsuario))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtApellidoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocumentoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTelefonoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCorreoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtContraseñaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("FORMULARIO PARA GESTIONAR USUARIOS");

        btonCancelar.setBackground(new java.awt.Color(0, 0, 204));
        btonCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btonCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btonCancelar.setText("Cancelar");
        btonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btonCancelarActionPerformed(evt);
            }
        });

        botonBuscar.setBackground(new java.awt.Color(0, 0, 204));
        botonBuscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonBuscar.setForeground(new java.awt.Color(255, 255, 255));
        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonEditar.setBackground(new java.awt.Color(0, 0, 204));
        botonEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonEditar.setForeground(new java.awt.Color(255, 255, 255));
        botonEditar.setText("Editar");
        botonEditar.setAutoscrolls(true);
        botonEditar.setBorderPainted(false);
        botonEditar.setEnabled(false);
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonEliminar.setBackground(new java.awt.Color(0, 0, 204));
        botonEliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        botonAtras.setBackground(new java.awt.Color(0, 0, 204));
        botonAtras.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonAtras.setForeground(new java.awt.Color(255, 255, 255));
        botonAtras.setText("Atras");
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });

        BotonLimpiarCampos.setBackground(new java.awt.Color(0, 0, 255));
        BotonLimpiarCampos.setText("Limpiar");
        BotonLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLimpiarCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAtras)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BotonLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btonCancelar)
                                .addGap(53, 53, 53)
                                .addComponent(botonEliminar)
                                .addGap(59, 59, 59)
                                .addComponent(botonEditar)
                                .addGap(45, 45, 45)
                                .addComponent(botonBuscar)))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btonCancelar)
                            .addComponent(botonBuscar)
                            .addComponent(botonEditar)
                            .addComponent(botonEliminar)
                            .addComponent(BotonLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(botonAtras))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cargarDatosDesdeBaseDeDatos() {
        try {
            // Recuperar los usuarios de la base de datos
            ArrayList<Usuario> usuariosBD = ConexionUsuarios.recuperarUsuariosDeBD();

            // Establecer los usuarios recuperados en la clase Usuario
            Usuario.setUsuariosBD(usuariosBD);

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al cargar usuarios desde la base de datos: " + e.getMessage());
        }
    }
    
     // Método para validar un correo electrónico utilizando expresiones regulares
    private boolean ValidarEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailRegex);
    }
    
    private void txtContraseñaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraseñaUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraseñaUsuarioActionPerformed

    private void btonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btonCancelarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "¿Desea cerrar la ventana?", "OJO - CONFIRMAR",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (opcion == JOptionPane.YES_OPTION) {
            //guardarDatosEnArchivo();  // Guardar datos antes de cerrar la ventana
            this.dispose();
        }
    }//GEN-LAST:event_btonCancelarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // Recuperar el Correo del formulario
        String correo = txtCorreoUsuario.getText();

        // Verificamos si el campo de Correo está vacío
        if (correo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese el correo del Usuario a consultar, antes presionar el Botón buscar.");
            return;
        }

        // Verificamos si la Base de Datos esta llena o esta vacía
        if (Usuario.getUsuariosBD() == null || Usuario.getUsuariosBD().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No existen Usuarios en la Base de Datos");
        } else {
            // Buscamos el Usuario en el ArrayList por correo
            Usuario usuarioEncontrado = null;
            for (Usuario usuario : Usuario.getUsuariosBD()) {
                if (usuario.getCorreo().equals(correo)) {
                    usuarioEncontrado = usuario;
                    break;
                }
            }

            if (usuarioEncontrado != null) {
                // Usuario encontrado, actualizamos los campos
                txtNombreUsuario.setText(usuarioEncontrado.getNombre());
                txtApellidoUsuario.setText(usuarioEncontrado.getApellido());
                txtDocumentoUsuario.setText(usuarioEncontrado.getNumCedula());
                txtTelefonoUsuario.setText(usuarioEncontrado.getNumTelefono());
                txtCorreoUsuario.setText(usuarioEncontrado.getCorreo());
                txtContraseñaUsuario.setText(usuarioEncontrado.getContraseña());
                botonEditar.setEnabled(true);
            } else {
                // Usuario no encontrado, limpiamos los campos
                JOptionPane.showMessageDialog(null, "No existe un Usuario con ese Correo en la Base de Datos");
                txtNombreUsuario.setText("");
                txtApellidoUsuario.setText("");
                txtDocumentoUsuario.setText("");
                txtTelefonoUsuario.setText("");
                txtCorreoUsuario.setText("");
                txtContraseñaUsuario.setText("");
                botonEditar.setEnabled(false);
            }
        }

    }//GEN-LAST:event_botonBuscarActionPerformed

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed

        // Validamos que el campo Correo tenga algun dato
        String correo = txtCorreoUsuario.getText();
        if (correo == null || correo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Para editar primero debes buscar los datos del Usuario que deseas editar");
            limpiarCampos();
            return;
        }

        // Buscar el usuario en el ArrayList por correo
        Usuario usuario = null;
        for (Usuario u : Usuario.usuariosBD) {
            if (u.getCorreo().equals(correo)) {
                usuario = u;
                break;
            }
        }

        // Verificar si el usuario existe
        if (usuario == null) {
            JOptionPane.showMessageDialog(null, "El usuario con el Correo especificado no existe.");
            return;
        }

        // Obtenemos las datos ingresados desde el formulario
        String nombres = txtNombreUsuario.getText();
        String apellidos = txtApellidoUsuario.getText();
        String telefono = txtTelefonoUsuario.getText();
        String documento = txtDocumentoUsuario.getText();
        char[] contraseña = txtContraseñaUsuario.getPassword();
        String clave = String.copyValueOf(contraseña);

        // Verifico la longitud de los campos que se editaran y otros criterios
        if (nombres.isEmpty() || !nombres.matches("[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ ]+") || nombres.length() > 255) {
            JOptionPane.showMessageDialog(null, "El nombre no puede estar vacío, debe llevar solo letras y no superar los 255 caracteres.");
        } else if (apellidos.isEmpty() || !apellidos.matches("[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ ]+") || apellidos.length() > 255) {
            JOptionPane.showMessageDialog(null, "El apellido no puede estar vacío, debe llevar solo letras y no superar los 255 caracteres.");
        } else if (documento.isEmpty() || !documento.matches("\\d+") || documento.length() > 20) {
            JOptionPane.showMessageDialog(null, "El número de documento no puede estar vacío, debe ser numérico y no superar los 20 caracteres.");
        } else if (telefono.isEmpty() || !telefono.matches("\\d{7,}") || telefono.length() > 15) {
            JOptionPane.showMessageDialog(null, "El número de teléfono no puede estar vacío, debe ser numérico y tener entre 7 y 15 caracteres.");
        } else if (correo.isEmpty() || !ValidarEmail(correo)) {
            JOptionPane.showMessageDialog(null, "El correo electrónico no puede estar vacío y debe ser válido.");
        } else if (clave.isEmpty()) {
            JOptionPane.showMessageDialog(null, "La contraseña no puede estar vacía.");
        } else {
            try {
                // Actualizamos los datos en la base de datos usando ConexionUsuarios
                ConexionUsuarios conexion = new ConexionUsuarios();
                conexion.editarDatosEnBaseDeDatos(correo, "nombre", nombres);
                conexion.editarDatosEnBaseDeDatos(correo, "apellido", apellidos);
                conexion.editarDatosEnBaseDeDatos(correo, "num_telefono", telefono);
                conexion.editarDatosEnBaseDeDatos(correo, "num_cedula", documento);
                conexion.editarDatosEnBaseDeDatos(correo, "contraseña", clave);

                // Actualizamos el objeto Usuario en memoria
                usuario.setNombre(nombres);
                usuario.setApellido(apellidos);
                usuario.setNumTelefono(telefono);
                usuario.setNumCedula(documento);
                usuario.setContraseña(clave);

                JOptionPane.showMessageDialog(null, "Datos del Usuario fueron modificados con éxito");
                limpiarCampos();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al editar los datos: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        String correoUsuario = txtCorreoUsuario.getText();
        if (correoUsuario == null || correoUsuario.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Para eliminar primero debe buscar un Usuario");
            limpiarCampos();
            return;
        }

        // Buscar el usuario en el ArrayList
        Usuario usuarioAEliminar = null;
        for (Usuario u : Usuario.usuariosBD) {
            if (u.getCorreo().equals(correoUsuario)) {
                usuarioAEliminar = u;
                break;
            }
        }

        if (usuarioAEliminar == null) {
            JOptionPane.showMessageDialog(null, "El usuario con el Correo especificado no existe.");
            limpiarCampos();
            return;
        }

        int opcion = JOptionPane.showConfirmDialog(null,
            "¿Seguro deseas eliminar este Usuario?",
            "CONFIRMAR ELIMINACIÓN",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            try {
                // Eliminar usuario de la base de datos
                ConexionUsuarios.eliminarUsuario(correoUsuario);

                // Eliminar del ArrayList
                Usuario.usuariosBD.remove(usuarioAEliminar);

                // Obtener el total actualizado
                int total = ConexionUsuarios.obtenerNumeroUsuariosDesdeBD();
                JOptionPane.showMessageDialog(null,
                    "Usuario eliminado exitosamente\nTOTAL: " + total);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                    "Error al eliminar el usuario: " + ex.getMessage());
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null,
                    "Error al conectar con la base de datos: " + ex.getMessage());
            }
        }
        limpiarCampos();
    }//GEN-LAST:event_botonEliminarActionPerformed

      
    // Método para limpiar los campos del formulario
    private void limpiarCampos() {
        txtNombreUsuario.setText("");
        txtApellidoUsuario.setText("");
        txtDocumentoUsuario.setText("");
        txtTelefonoUsuario.setText("");
        txtCorreoUsuario.setText("");
        txtContraseñaUsuario.setText("");
    }
    
    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonAtrasActionPerformed

    private void BotonLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLimpiarCamposActionPerformed
        txtNombreUsuario.setText("");
        txtApellidoUsuario.setText("");
        txtDocumentoUsuario.setText("");
        txtTelefonoUsuario.setText("");
        txtCorreoUsuario.setText("");
        txtContraseñaUsuario.setText("");
    }//GEN-LAST:event_BotonLimpiarCamposActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiCuenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonLimpiarCampos;
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton btonCancelar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtApellidoUsuario;
    private javax.swing.JPasswordField txtContraseñaUsuario;
    private javax.swing.JTextField txtCorreoUsuario;
    private javax.swing.JTextField txtDocumentoUsuario;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtTelefonoUsuario;
    // End of variables declaration//GEN-END:variables
}
